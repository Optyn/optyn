= banner("Import Customers for #{current_shop.name}")
  
.pad3pc
  %br
  
  .import
    %ul.text-left
      %li If you have a previous email list, you can easily import it into Optyn. 
      %li
        You can download the
        = link_to "Sample File", "/user_import_stub.csv"
        by
        = link_to "clicking here.", "/user_import_stub.csv"
        The fields "First Name", "Last Name" and "Email" are required. "Gender" and "DOB" are not required.
      %li
        If you want us to do it or have any issues, please email us with your subscriber lists at 
        %a{href: "mailto:support@optyn.com"} support@optyn.com
        and we'll take care of it all.
      %li
        You can create a new list or choose an existing list for every one of your imports.
    = form_for :file_import, :url => merchants_file_imports_path, :method => "post", multipart: true, html: {class: 'form-horizontal'} do |f|
      .row-fluid
        .span8.offset2.text-center
          .control-group
            = f.label :csv_file, "Subscriber CSV file*", class: 'control-label'
            .controls.text-left
              = f.file_field :csv_file

          .control-group
            = f.label :label, "Select or Create a list*", class: 'control-label'
            .controls.text-left.labels
              = hidden_field_tag "create_label_users_path", create_labels_for_user_merchants_connections_path
              = select_tag "label_ids[]", options_from_collection_for_select(@labels, :name, :name),
                 { id: "label_ids", multiple: 'multiple', class: 'chzn-select span12', 'data-placeholder' => 'Create a new List or choose a list for import'}

          .actions
            = f.submit "Import", class: "btn btn-primary"

    %table.table.table-striped.table-hover
      %caption Imported files
      %thead
        %tr
          %th #
          %th Name
          %th Status
          %th Label
          %th Stats
          %th Uploaded
      %tbody
        - if @file_imports.present?
          - @file_imports.each_with_index do |import, index|
            %tr
              %td= index + 1
              %td
                = File.basename(import.csv_file.to_s)
              %td
                = import.status.humanize rescue "-"
              %td
                = import.label
              %td
                - if import.stats.present?
                  - import.stats.each_pair do |key, value|
                    == #{key.to_s.humanize.pluralize} = #{value}
                    %br
                - else
                  N/A
              %td
                = human_time(import.created_at) rescue "-"
        - else
          %tr
            %td{colspan: 6}
              No file imports yet.

