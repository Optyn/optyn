partner = Partner.last
app = partner.oauth_application
require 'oauth2'
callback = 'http://localhost:3000/robots.txt'
app_id = app.uid
secret = app.secret
site = "http://localhost:3000/"
client = OAuth2::Client.new(app_id, secret, site: site)
client.auth_code.authorize_url(redirect_uri: callback)

the output that you get from this url you need to copy paste that in the browser. 
the browser will prompt you for a uname and a password. you will enter: gaurav+2@optyn.com | 9p5yn123 

code = '584c8894b70e11ad6db8bfea1b774a9e7579917f5fa49e65032a1031412e9645'
access = client.auth_code.get_token(code, redirect_uri: callback)
access_token = access.token
expires_at = access.expires_at
manager_uuid = Manager.find_by_email('eatstreet+test@optyn.com').uuid
#manager_uuid = Manager.find_by_email('lroste@barbicide.com').uuid
"http://localhost:3002/messages/index?access_token=#{access_token}&manager_uuid=#{manager_uuid}&expires_at=#{expires_at}&access_token_url=http://ETS_URL/get_credential>"

---------------
partner = Partner.all[1]
app = partner.oauth_application
app.redirect_uri = app.redirect_uri.gsub("https://partner.optyn.com", "http://localhost:3001")
app.save
partner = Partner.last
app = partner.oauth_application
app.redirect_uri = "http://localhost:3000/robots.txt"
app.save

office@eatstreet.com | 3atst4eet

--------------------------------
Message.last(1).each do |message|
#message = Message.last
message.send_on = 2.days.ago
message.state = 'queued'
message.save(validate: false)
end
Message.batch_send

message = Message.for_uuid('b6e70671aed04b9a9fb5d27ef42e9c55')
message.message_users.destroy_all
message.send_on = 2.days.ago
message.state = 'queued'
message.save(validate: false)
Message.batch_send

--------------------------------
load "#{Rails.root}/lib/messagecenter/templates/markup_generator.rb"
load "#{Rails.root}/lib/messagecenter/templates/existing_template.rb"
message = Message.last
template = message.template
content = message.content
Messagecenter::Templates::MarkupGenerator.generate_editable_content(content, template)


